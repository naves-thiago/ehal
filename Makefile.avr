# Must have utils
CC=avr-gcc
AR=avr-ar
MKDIR=mkdir
CP=cp -f
RM=rm

# Final name
LIB=libehal-$(MCU).a

# Get the lib folder based on the toolchain location.
LIB_INSTALL_DIR=$(shell dirname $(shell which $(CC)))/../avr/lib
INC_INSTALL_DIR=$(shell dirname $(shell which $(CC)))/../avr/include/ehal

# Get folders from within ehal.
GENERIC_PATH=ehal
SPECIFIC_PATH=ehal/$(ARCH)

CDEBUG =-gdwarf-2
CWARN =-Wall -Wstrict-prototypes
ONCE_FLAGS =--combine  -fwhole-program
CTUNING =-funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums \
-ffunction-sections -fno-inline-small-functions -fno-split-wide-types \
-fno-tree-scev-cprop -Wl,--relax,--gc-sections
INCLUDE_DIR=				\
		-I.			\
		-I./ehal		\
		-I./$(SPECIFIC_PATH)

CFLAGS = $(CDEBUG) $(CDEFS) $(CINCS) -Os $(CWARN) $(CSTANDARD) \
$(CEXTRA) $(INCLUDE_DIR)

ALL_CFLAGS=-mmcu=$(MCU) $(CFLAGS) $(INCLUDE_DIR)

LDFLAGS=

# Resources definition. No need to change, change the ifeq of specific MCUs.
# Also... pio0 brings together the API sinse it gets included for any pio
# usage.

PIO=					\
	$(SPECIFIC_PATH)/port.c		\
	$(GENERIC_PATH)/generic/pin.c	\
	$(SPECIFIC_PATH)/port_specific.h\
	$(SPECIFIC_PATH)/pin_specific.h	\
	$(GENERIC_PATH)/port.h		\
	$(GENERIC_PATH)/pin.h

UART_X8=				\
	$(SPECIFIC_PATH)/uart_x8.c	\
	$(GENERIC_PATH)/uart.h		\
	$(GENERIC_PATH)/generic/queue.c	\
	$(GENERIC_PATH)/queue.h		\

SPIM=					\
	$(SPECIFIC_PATH)/spim.c		\
	$(SPECIFIC_PATH)/spim_specific.h\
	$(GENERIC_PATH)/spim.h



# TODO: complete me ...
USI_SRC=
I2C_SRC=
ADC_SRC=
UART_SRC=
PWM=
RTC=
INT=
CCP=
ETH=
DMA=

# MCU resources

ifeq ($(MCU),attiny25)
RESOURCES+=$(PIO)
else
ifeq ($(MCU),atmega8)
RESOURCES+=$(PIO)
RESOURCES+=$(SPIM)
else
ifeq ($(MCU),atmega88)
RESOURCES+=$(PIO)
RESOURCES+=$(SPIM)
else
ifeq ($(MCU),atmega168)
RESOURCES+=$(PIO)
RESOURCES+=$(SPIM)
else

ifeq ($(MCU),atmega16)
RESOURCES+=$(PIO)
RESOURCES+=$(SPIM)
else

ifeq ($(MCU),atmega32)
RESOURCES+=$(PIO)
RESOURCES+=$(SPIM)
else

ifeq ($(MCU),atmega128)
RESOURCES+=$(PIO)
RESOURCES+=$(SPIM)
else

ifeq ($(MCU),atmega164p)
RESOURCES+=$(PIO)
RESOURCES+=$(UART_X8)
else # Don't have port for this one...
endif
endif
endif
endif
endif
endif
endif
endif

# .c + .h
RESOURCES+=	$(GENERIC_PATH)/types.h \
		$(SPECIFIC_PATH)/config.h
# .h only
INC=$(filter %.h, $(RESOURCES))
# .c only
SRC=$(filter %.c, $(RESOURCES))
OBJ=$(SRC:.c=.o)

.PHONY: all install clean
all: $(LIB)

install:
	$(MKDIR) -p $(INC_INSTALL_DIR)
	$(CP) $(LIB) $(LIB_INSTALL_DIR)
	$(CP) $(INC) $(INC_INSTALL_DIR)

$(LIB): $(OBJ)
	$(AR) rcs $@ $^

%.elf: $(OBJ)
	$(CC) $(ALL_CFLAGS) $(LDFLAGS) $^ $@

.c.o:
	$(CC) $(ALL_CFLAGS) -c -o $@ $<

clean:
	$(RM) -f $(OBJ) $(LIB)
