# Must have utils
CC=msp430-gcc
AR=msp430-ar
MKDIR=mkdir
CP=cp -f
RM=rm

ifndef $F_CPU
F_CPU=8000000
endif

# Final name
LIB=libehal-$(MCU)-$(F_CPU).a

# Get the lib folder based on the toolchain location.
# Where to put .a
LIB_INSTALL_DIR=$(shell dirname $(shell which $(CC)))/../msp430/lib
# Where to put .h
INC_INSTALL_DIR=$(shell dirname $(shell which $(CC)))/../msp430/include/ehal

# Get folders from within ehal.
GENERIC_PATH=ehal
PORTABLE_PATH=ehal/portable
SPECIFIC_PATH=ehal/msp430

CDEBUG =-gdwarf-2
CWARN =-Wall -Wstrict-prototypes
# optimization for compiling all the .c at the same time
CTUNING=-funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums \
-ffunction-sections -fno-inline-small-functions -fno-split-wide-types \
-fno-tree-scev-cprop -Wl,--relax,--gc-sections

INCLUDE_DIR= -I./$(SPECIFIC_PATH) -I./$(GENERIC_PATH) -I./$(PORTABLE_PATH)

CFLAGS=-mmcu=$(MCU) -Dehal_$(MCU) -DF_CPU=$(F_CPU) \
$(CDEBUG) $(CDEFS) $(CINCS) -Os $(CWARN) $(CSTANDARD) \
$(CEXTRA) $(INCLUDE_DIR)

LDFLAGS=

# Resources definition. No need to change, change the ifeq of specific MCUs.

include portable.d

CPU=					\
	$(SPECIFIC_PATH)/cpu_init.c	\
	$(GENERIC_PATH)/cpu.h
PORT=					\
	$(SPECIFIC_PATH)/port_init.c	\
	$(SPECIFIC_PATH)/port_setdir.c	\
	$(SPECIFIC_PATH)/port_write.c	\
	$(SPECIFIC_PATH)/port_read.c	\
	$(SPECIFIC_PATH)/port_specific.h\
	$(GENERIC_PATH)/port.h

ifeq ($(MCU),msp430x2012)
RESOURCES+=$(CPU)
RESOURCES+=$(PORT)
endif
ifeq ($(MCU),msp430x2013)
RESOURCES+=$(CPU)
RESOURCES+=$(PORT)
endif


# .c + .h
RESOURCES+= $(PORTABLE_PATH)/tinytypes.h

# .h only
INC=$(filter %.h, $(RESOURCES))
# .c only
SRC=$(filter %.c, $(RESOURCES))
# one object file per MCU
OBJ=$(SRC:%.c=%-$(MCU)-$(F_CPU).o)

.PHONY: all install clean
all: $(LIB) .$(MCU)-$(F_CPU).d

install: all .$(MCU)-$(F_CPU).d
	$(MKDIR) -p $(INC_INSTALL_DIR)
	$(CP) $(LIB) $(LIB_INSTALL_DIR)
	$(CP) $(INC) $(INC_INSTALL_DIR)

$(LIB): $(OBJ)
	$(AR) rcs $@ $^

%-$(MCU)-$(F_CPU).o : %.c
	$(CC) -MM $(CFLAGS) -MQ $@ $< >> .$(MCU)-$(F_CPU).d
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	$(RM) -f $(OBJ) $(LIB) .$(MCU)-$(F_CPU).d

.$(MCU)-$(F_CPU).d: $(OBJ)
sinclude .$(MCU)-$(F_CPU).d
